
name: test

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'branch name or version tag or commit hash: main / v0.0.1 / acdefg'
        default: 'main'
        required: true
        type: string
      python_version:
        description: 'python_version: multiple versions separated by ,'
        default: '3.10'
        required: true
        type: string
      torch_version:
        description: 'torch_version: multiple versions separated by ,'
        default: '2.1.2;2.4.0'
        required: true
        type: string
      cuda_version:
        description: 'cuda_version: multiple versions separated by ,'
        default: '11.8.0;12.1.0'
        required: true
        type: string

jobs:
  set_ver:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: |
          python_json=$(echo $PYTHON_VERSION | sed 's/;/\\",\\"/g')
          torch_json=$(echo $TORCH_VERSION | sed 's/;/\\",\\"/g')
          cuda_json=$(echo $CUDA_VERSION | sed 's/;/\\",\\"/g')

          python_ver_json=[\"$python_json\"]
          torch_ver_json=[\"$torch_json\"]
          cuda_ver_json=[\"$cuda_json\"]

          echo "matrix={\
          \"py_ver\": [$python_ver_json],\
          \"torch_ver\": [$torch_ver_json],\
          \"cuda_ver\": [$cuda_ver_json],\
          \"include\":[],\
          \"exclude\":[]\
          }" >> $GITHUB_OUTPUT
        shell: bash
        env:
          PYTHON_VERSION: ${{ inputs.python_version }}
          TORCH_VERSION: ${{ inputs.torch_version }}  
          CUDA_VERSION: ${{ inputs.cuda_version }}
        
  job2:
    name: Job2 ${{ matrix.py_ver }}-${{ matrix.torch_ver }}-${{ matrix.cuda_ver }}
    needs: set_ver
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.set_ver.outputs.matrix) }}
    steps:
      - run: echo "Matrix:${{ matrix }}"
        
  # job3:
  #   name: Job3 ${{ matrix.project }}-${{ matrix.config }}
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix: 
  #       project: ["A", "B"]
  #       config: ["C", "D"]
  #       include:
  #         - project: "A"
  #           config: "C"
  #       exclude:
  #         - project: "A"
  #           config: "D"
  #   steps:
  #     - run: |
  #         echo "Matrix: ${{ toJson(matrix) }}"